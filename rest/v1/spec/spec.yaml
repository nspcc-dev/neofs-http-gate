openapi: 3.0.3
info:
  title: REST API NeoFS
  description: REST API NeoFS
  version: v1
servers:
  - url: 'https://localhost'

security:
  - BearerAuth: [ ]

paths:
  /auth:
    post:
      summary: Form bearer token to futher requests
      security: [ ]
      parameters:
        - in: header
          name: X-Neofs-Token-Scope
          description: Supported operation scope for token
          schema:
            type: string
            enum:
              - object
              - container
        - in: header
          name: X-Neofs-Token-Lifetime
          description: Token lifetime in epoch
          schema:
            type: integer
            default: 100
      requestBody:
        description: Bearer token
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bearer'
            examples:
              ObjectToken:
                $ref: '#/components/examples/ObjectToken'
              ContainerToken:
                $ref: '#/components/examples/ContainerToken'


      responses:
        '200':
          description: Base64 encoded stable binary marshaled bearer token/s
          content:
            text/plain:
              schema:
                type: string
                example: CiQKABogCAIQAhoWCAIQAhoIRmlsZU5hbWUiBm15ZmlsZSICCAM=
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerTokenResponse'

  /objects:
    parameters:
      - in: header
        name: X-Neofs-Token-Signature
        description: Base64 encoded signature for bearer token
        schema:
          type: string
        required: true
        example:
          BGtqMEpzxTabrdIIIDAnL79Cs7bm46+8lsFaMMU+LCKw/ujEjF0r5mVLKixWmxoreuj1E0BXWcqp9d3wGV6Hc9I=
      - in: header
        name: X-Neofs-Bearer-Owner-Key
        description: Hex encoded the public part of the key that signed the bearer token
        schema:
          type: string
        required: true
        example:
          031a6c6fbbdf02ca351745fa86b9ba5a9452d785ac4f7fc2b7548ca2a46c4fcf4a
    put:
      summary: Upload object to NeoFS
      requestBody:
        required: true
        description: Object info to upload
        content:
          application/json:
            schema:
              type: object
              properties:
                containerId:
                  type: string
                fileName:
                  type: string
                payload:
                  type: string
              required:
                - containerId
                - fileName
              example:
                containerId: 5HZTn5qkRnmgSz9gSrw22CEdPPk6nQhkwf2Mgzyvkikv
                fileName: myFile.txt
                payload: Y29udGVudCBvZiBmaWxl
      responses:
        '200':
          description: Address of uploaded objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  objectId:
                    type: string
                  containerId:
                    type: string
                required:
                  - objectId
                  - containerId
                example:
                  objectId: 8N3o7Dtr6T1xteCt6eRwhpmJ7JhME58Hyu1dvaswuTDd
                  containerId: 5HZTn5qkRnmgSz9gSrw22CEdPPk6nQhkwf2Mgzyvkikv

  /containers:
    parameters:
      - in: header
        name: X-Neofs-Bearer-Signature
        description: Base64 encoded signature for bearer token
        schema:
          type: string
        required: true
        example:
          BEvF1N0heytTXn1p2ZV3jN8YM25YkG4FxHmPeq2kWP5HeHCAN4cDjONyX6Bh30Ypw6Kfch2nYOfhiL+rClYQJ9Q=
      - in: header
        name: X-Neofs-Bearer-Owner-Key
        description: Hex encoded the public part of the key that signed the bearer token
        schema:
          type: string
        required: true
        example:
          031a6c6fbbdf02ca351745fa86b9ba5a9452d785ac4f7fc2b7548ca2a46c4fcf4a
    put:
      summary: Create new container in NeoFS
      requestBody:
        required: true
        description: Container info
        content:
          application/json:
            schema:
              type: object
              properties:
                containerName:
                  type: string
                placementPolicy:
                  type: string
                basicAcl:
                  type: string
              required:
                - containerName
              example:
                containerId: container
                placementPolicy: "REP 3"
                basicAcl: public-read-write
      responses:
        '200':
          description: Address of uploaded objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  containerId:
                    type: string
                required:
                  - containerId
                example:
                  containerId: 5HZTn5qkRnmgSz9gSrw22CEdPPk6nQhkwf2Mgzyvkikv

  /containers/{containerId}:
    get:
      summary: Get container by id
      security: [ ]
      parameters:
        - in: path
          name: containerId
          schema:
            type: string
          required: true
          description: Base58 encoded container id
      responses:
        '200':
          description: Container info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerInfo'

components:
  securitySchemes:
    BearerAuth:
      type: "http"
      scheme: "bearer"
  schemas:
    Bearer:
      type: object
      properties:
        object:
          type: array
          items:
            $ref: '#/components/schemas/Record'
        container:
          type: array
          items:
            $ref: '#/components/schemas/Rule'
    Record:
      type: object
      properties:
        action:
          type: string
          enum:
            - ALLOW
            - DENY
        operation:
          type: string
          enum:
            - GET
            - HEAD
            - PUT
            - DELETE
            - SEARCH
            - RANGE
            - RANGEHASH
        filters:
          type: array
          items:
            $ref: '#/components/schemas/Filter'
        targets:
          type: array
          items:
            $ref: '#/components/schemas/Target'
      required:
        - action
        - operation
        - filters
        - targets
      example:
        operation: GET
        action: ALLOW
        filters: [ ]
        targets:
          - role: OTHERS
            keys: [ ]
    Filter:
      type: object
      properties:
        headerType:
          type: string
          enum:
            - REQUEST
            - OBJECT
            - SERVICE
        matchType:
          type: string
          enum:
            - STRING_EQUAL
            - STRING_NOT_EQUAL
        key:
          type: string
        value:
          type: string
      required:
        - headerType
        - matchType
        - key
        - value
      example:
        headerType: OBJECT
        matchType: STRING_NOT_EQUAL
        key: FileName
        value: myfile
    Target:
      type: object
      properties:
        role:
          type: string
          enum:
            - USER
            - SYSTEM
            - OTHERS
        keys:
          type: array
          items:
            type: string
      required:
        - role
        - keys
      example:
        role: USER
        keys:
          - 021dc56fc6d81d581ae7605a8e00e0e0bab6cbad566a924a527339475a97a8e38e
    Rule:
      type: object
      properties:
        verb:
          type: string
          enum:
            - PUT
            - DELETE
            - SETEACL
        containerId:
          type: string
      required:
        - verb
    ContainerTokenResponse:
      type: object
      properties:
        tokens:
          type: array
          items:
            $ref: '#/components/schemas/ContainerToken'
    ContainerToken:
      type: object
      properties:
        verb:
          type: string
          enum:
            - PUT
            - DELETE
            - SETEACL
        token:
          type: string
      required:
        - verb
        - token
      example:
        - verb: PUT
          token: ChCpanIBJCpJuJz42KOmGMSnEhsKGTWquaX2Lq6GhhO4faOYkLD0f9WkXuYJlq4aBAhnGAMiIQJgFcIEghQB5lq3AJZOVswInwc1IGhlQ7NCUh4DFO3UATIECAEQAQ==
        - verb: DELETE
          token: ChDQqAY9kWRA9aDUmNnZgjexEhsKGTWquaX2Lq6GhhO4faOYkLD0f9WkXuYJlq4aBAhnGAMiIQPNok0jgvp1Qm4AXHzygfHBftUg2YZVxQ4lfT+JRTVzNzImCAIaIgogP6y+xIq8YOfBB2Phs+VfM1moHQNcTrZuNKL4KIaT/H8=
    ContainerInfo:
      type: object
      properties:
        containerId:
          type: string
        version:
          type: string
        ownerId:
          type: string
        basicAcl:
          type: string
        placementPolicy:
          type: string
        attributes:
          type: array
          items:
            type: object
            properties:
              key:
                type: string
              value:
                type: string
      example:
        containerId: 5HZTn5qkRnmgSz9gSrw22CEdPPk6nQhkwf2Mgzyvkikv
        version: "2.11"
        ownerId: NbUgTSFvPmsRxmGeWpuuGeJUoRoi6PErcM
        basicAcl: "0x1fbf9fff"
        placementPolicy: "REP 2"
        attribute:
          - key: Timestamp
            value: "1648810072"
          - key: Name
            value: container
  examples:
    ObjectToken:
      summary: Sample of auth token request for object operations
      value:
        object:
          - operation: PUT
            action: ALLOW
            filters: [ ]
            targets:
              - role: OTHERS
                keys: [ ]
          - operation: DELETE
            action: DENY
            filters: [ ]
            targets:
              - role: OTHERS
                keys: [ ]
    ContainerToken:
      summary: Sample of auth token request for container operations
      value:
        container:
          - verb: PUT
            containerId: ""
          - verb: DELETE
            cotnainerId: 5HZTn5qkRnmgSz9gSrw22CEdPPk6nQhkwf2Mgzyvkikv
